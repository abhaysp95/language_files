!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/raytracer/Documents/nc/ncurses/creating_a_menubar/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/p5.9.20210110.0/
${BIN}	Makefile	/^${BIN}: ${OBJ}$/;"	t
${DEBUG_BIN}	Makefile	/^${DEBUG_BIN}: ${DEBUG_OBJ}$/;"	t
${DEBUG_DIR}/%.o	Makefile	/^${DEBUG_DIR}\/%.o: ${SRC_DIR}\/%.c$/;"	t
${OBJ_DIR}/%.o	Makefile	/^${OBJ_DIR}\/%.o: ${SRC_DIR}\/%.c$/;"	t
BIN	Makefile	/^BIN       = ${BIN_DIR}\/$(notdir $(realpath .))$/;"	m
BIN_DIR	Makefile	/^BIN_DIR   = bin$/;"	m
CC	Makefile	/^CC     = clang$/;"	m
CDFLAG	Makefile	/^CDFLAG = -Wall -std=c99 -g$/;"	m
CFLAG	Makefile	/^CFLAG  = -Wall -std=c99$/;"	m
DEBUG_BIN	Makefile	/^DEBUG_BIN = $(addprefix ${DEBUG_DIR}\/, $(notdir $(realpath .)))$/;"	m
DEBUG_DIR	Makefile	/^DEBUG_DIR = debug$/;"	m
DEBUG_OBJ	Makefile	/^DEBUG_OBJ = $(addprefix ${DEBUG_DIR}\/, $(notdir ${SRC:.c=.o}))$/;"	m
DIRS	Makefile	/^DIRS      = ${BIN_DIR} ${OBJ_DIR} ${DEBUG_DIR}$/;"	m
INC_DIR	Makefile	/^INC_DIR   = inc$/;"	m
LD	Makefile	/^LD     = clang$/;"	m
LDFLAG	Makefile	/^LDFLAG = -v -lncurses$/;"	m
LFLAG	Makefile	/^LFLAG  = -lncurses$/;"	m
Menu	src/main.c	/^} Menu;$/;"	t	typeref:struct:menu	file:
MenuList	src/main.c	/^} MenuList;$/;"	t	typeref:struct:menu_list	file:
OBJ	Makefile	/^OBJ       = $(addprefix ${OBJ_DIR}\/, $(notdir ${SRC:.c=.o}))$/;"	m
OBJ_DIR	Makefile	/^OBJ_DIR   = obj$/;"	m
SRC	Makefile	/^SRC       = $(wildcard ${SRC_DIR}\/*.c)$/;"	m
SRC_DIR	Makefile	/^SRC_DIR   = src$/;"	m
all	Makefile	/^all: dir ${BIN}$/;"	t
clean	Makefile	/^clean:$/;"	t
debug	Makefile	/^debug: dir ${DEBUG_BIN}$/;"	t
dir	Makefile	/^dir:$/;"	t
draw_menu_item	src/main.c	/^void draw_menu_item(WINDOW* win, Menu menu) {$/;"	f	typeref:typename:void
free_menu_list	src/main.c	/^void free_menu_list(MenuList* menu_list) {$/;"	f	typeref:typename:void
initialize_menu_bar	src/main.c	/^void initialize_menu_bar(MenuList* menu_list) {$/;"	f	typeref:typename:void
initialize_menu_list	src/main.c	/^void initialize_menu_list(MenuList* menu_list) {$/;"	f	typeref:typename:void
initialize_menu_win	src/main.c	/^void initialize_menu_win(MenuList* menu_list) {$/;"	f	typeref:typename:void
is_highlighted	src/main.c	/^	bool is_highlighted;$/;"	m	struct:menu	typeref:typename:bool	file:
items	src/main.c	/^	char** items;$/;"	m	struct:menu	typeref:typename:char **	file:
m_lst	src/main.c	/^	Menu* m_lst;$/;"	m	struct:menu_list	typeref:typename:Menu *	file:
main	src/main.c	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
menu	src/main.c	/^typedef struct menu {$/;"	s	file:
menu1_items	src/main.c	/^const char* menu1_items[] = {$/;"	v	typeref:typename:const char * []
menu2_items	src/main.c	/^const char* menu2_items[] = {$/;"	v	typeref:typename:const char * []
menu3_items	src/main.c	/^const char* menu3_items[] = {$/;"	v	typeref:typename:const char * []
menu_items	src/main.c	/^const char** menu_items[] = {$/;"	v	typeref:typename:const char ** []
menu_items_sizes	src/main.c	/^const int menu_items_sizes[] = {$/;"	v	typeref:typename:const int[]
menu_list	src/main.c	/^typedef struct menu_list {$/;"	s	file:
menu_names	src/main.c	/^const char* menu_names[] = {$/;"	v	typeref:typename:const char * []
menu_nums	src/main.c	/^	int menu_nums;$/;"	m	struct:menu_list	typeref:typename:int	file:
menu_win	src/main.c	/^	WINDOW* menu_win;$/;"	m	struct:menu_list	typeref:typename:WINDOW *	file:
name	src/main.c	/^	char* name;$/;"	m	struct:menu	typeref:typename:char *	file:
num_items	src/main.c	/^	int num_items;$/;"	m	struct:menu	typeref:typename:int	file:
print_menu	src/main.c	/^void print_menu(MenuList* menu_list) {$/;"	f	typeref:typename:void
select_next_item	src/main.c	/^void select_next_item(Menu* menu) {$/;"	f	typeref:typename:void
select_prev_item	src/main.c	/^void select_prev_item(Menu* menu) {$/;"	f	typeref:typename:void
selected_item	src/main.c	/^	int selected_item;$/;"	m	struct:menu	typeref:typename:int	file:
selected_menu	src/main.c	/^	int selected_menu;$/;"	m	struct:menu_list	typeref:typename:int	file:
win	src/main.c	/^	WINDOW* win;$/;"	m	struct:menu_list	typeref:typename:WINDOW *	file:
